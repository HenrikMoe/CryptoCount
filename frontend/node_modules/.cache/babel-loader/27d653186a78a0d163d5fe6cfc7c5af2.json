{"ast":null,"code":"import * as api from \"../api\";\nexport function signIn(credentials, cb) {\n  return (dispatch, prevState) => {\n    api.signIn(credentials).then(userinfo => dispatch({\n      type: \"SIGN_IN\",\n      user: userinfo\n    })).then(() => {\n      if (cb) {\n        cb();\n      }\n    }).catch(error => {\n      dispatch({\n        type: \"SIGN_IN_ERR\",\n        details: error\n      });\n    });\n  };\n}\nexport function signOut(cb) {\n  return (dispatch, prevState) => {\n    api.signOut().then(() => dispatch({\n      type: \"SIGN_OUT\"\n    })).then(() => {\n      if (cb) {\n        cb();\n      }\n    });\n  };\n}\nexport function register(data, cb) {\n  return (dispatch, prevState) => {\n    api.register(data).then(() => {\n      if (cb) {\n        cb();\n      }\n    }).catch(error => dispatch({\n      type: \"REGISTER_ERR\",\n      details: error\n    }));\n  };\n}\nexport function closeErr(cb) {\n  return (dispatch, prevState) => {\n    return dispatch({\n      type: \"CLOSE_ERR\"\n    });\n  };\n}\nexport function setParams(params, cb) {\n  if (cb) {\n    cb();\n  }\n\n  return {\n    type: \"CREATE_PARAMS\",\n    payload: params\n  };\n}\nexport function analPost(params, cb) {\n  return dispatch => {\n    api.analPost(params).then(() => {\n      if (cb) {\n        cb();\n      }\n    });\n  };\n}\nexport function getCalendarData(params, cb) {\n  let data;\n  return dispatch => {\n    api.getCalendarData(params).then(res => res.json()).then(res => {\n      data = res;\n\n      if (cb) {\n        cb();\n      }\n\n      return dispatch({\n        type: \"CREATE_CAL\",\n        payload: data\n      });\n    }).catch(error => console.log(error));\n  };\n}","map":{"version":3,"sources":["/Users/chase/Desktop/CryptoProjects/CryptoCount-v2/frontend/src/actions/actionCreators.js"],"names":["api","signIn","credentials","cb","dispatch","prevState","then","userinfo","type","user","catch","error","details","signOut","register","data","closeErr","setParams","params","payload","analPost","getCalendarData","res","json","console","log"],"mappings":"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","sourcesContent":["import * as api from \"../api\";\n\nexport function signIn(credentials, cb) {\n\treturn (dispatch, prevState) => {\n\t\tapi.signIn(credentials)\n\t\t\t.then((userinfo) => dispatch({ type: \"SIGN_IN\", user: userinfo }))\n\t\t\t.then(() => {\n\t\t\t\tif (cb) {\n\t\t\t\t\tcb();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tdispatch({ type: \"SIGN_IN_ERR\", details: error });\n\t\t\t});\n\t};\n}\n\nexport function signOut(cb) {\n\treturn (dispatch, prevState) => {\n\t\tapi.signOut()\n\t\t\t.then(() => dispatch({ type: \"SIGN_OUT\" }))\n\t\t\t.then(() => {\n\t\t\t\tif (cb) {\n\t\t\t\t\tcb();\n\t\t\t\t}\n\t\t\t});\n\t};\n}\n\nexport function register(data, cb) {\n\treturn (dispatch, prevState) => {\n\t\tapi.register(data)\n\t\t\t.then(() => {\n\t\t\t\tif (cb) {\n\t\t\t\t\tcb();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((error) =>\n\t\t\t\tdispatch({ type: \"REGISTER_ERR\", details: error })\n\t\t\t);\n\t};\n}\n\nexport function closeErr(cb) {\n\treturn (dispatch, prevState) => {\n\t\treturn dispatch({ type: \"CLOSE_ERR\" });\n\t};\n}\n\nexport function setParams(params, cb) {\n\tif (cb) {\n\t\tcb();\n\t}\n\treturn { type: \"CREATE_PARAMS\", payload: params };\n}\n\nexport function analPost(params, cb) {\n\treturn (dispatch) => {\n\t\tapi.analPost(params).then(() => {\n\t\t\tif (cb) {\n\t\t\t\tcb();\n\t\t\t}\n\t\t});\n\t};\n}\n\nexport function getCalendarData(params, cb) {\n\tlet data;\n\treturn (dispatch) => {\n\t\tapi.getCalendarData(params)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((res) => {\n\t\t\t\tdata = res;\n\t\t\t\tif (cb) {\n\t\t\t\t\tcb();\n\t\t\t\t}\n\t\t\t\treturn dispatch({ type: \"CREATE_CAL\", payload: data });\n\t\t\t})\n\t\t\t.catch((error) => console.log(error));\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}