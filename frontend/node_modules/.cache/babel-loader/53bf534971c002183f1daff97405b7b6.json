{"ast":null,"code":"export const THIS_YEAR = +new Date().getFullYear();\nexport const THIS_MONTH = +new Date().getMonth() + 1;\nexport const WEEK_DAYS = {\n  Sunday: \"Sun\",\n  Monday: \"Mon\",\n  Tuesday: \"Tue\",\n  Wednesday: \"Wed\",\n  Thursday: \"Thu\",\n  Friday: \"Fri\",\n  Saturday: \"Sat\"\n};\nexport const CALENDAR_MONTHS = {\n  January: \"Jan\",\n  February: \"Feb\",\n  March: \"Mar\",\n  April: \"Apr\",\n  May: \"May\",\n  June: \"Jun\",\n  July: \"Jul\",\n  August: \"Aug\",\n  September: \"Sep\",\n  October: \"Oct\",\n  November: \"Nov\",\n  December: \"Dec\"\n};\nexport const CALENDAR_WEEKS = 6;\nexport const zeroPad = (value, length) => `${value}`.padStart(length, \"0\");\nexport const isDate = date => {\n  const isDate = Object.prototype.toString.call(date) === \"[object Date]\";\n  const isValidDate = date && !Number.isNaN(date.valueOf());\n  return isDate && isValidDate;\n};\nexport const getDateISO = (date = new Date()) => {\n  if (!isDate(date)) return null;\n  return [date.getFullYear(), zeroPad(+date.getMonth() + 1, 2), zeroPad(+date.getDate(), 2)].join(\"-\");\n};\nexport const getMonthDays = (month = THIS_MONTH, year = THIS_YEAR) => {\n  const months30 = [4, 6, 9, 11];\n  const leapYear = year % 4 === 0;\n  return month === 2 ? leapYear ? 29 : 28 : months30.includes(month) ? 30 : 31;\n};\nexport const getMonthFirstDay = (month = THIS_MONTH, year = THIS_YEAR) => {\n  return +new Date(`${year}-${zeroPad(month, 2)}-01`).getDay() + 1;\n};\nexport const isSameMonth = (date, basedate = new Date()) => {\n  if (!(isDate(date) && isDate(basedate))) return false;\n  const basedateMonth = +basedate.getMonth() + 1;\n  const basedateYear = basedate.getFullYear();\n  const dateMonth = +date.getMonth() + 1;\n  const dateYear = date.getFullYear();\n  return +basedateMonth === +dateMonth && +basedateYear === +dateYear;\n};\nexport const isSameDay = (date, basedate = new Date()) => {\n  if (!(isDate(date) && isDate(basedate))) return false;\n  const basedateDate = basedate.getDate();\n  const basedateMonth = +basedate.getMonth() + 1;\n  const basedateYear = basedate.getFullYear();\n  const dateDate = date.getDate();\n  const dateMonth = +date.getMonth() + 1;\n  const dateYear = date.getFullYear();\n  return +basedateDate === +dateDate && +basedateMonth === +dateMonth && +basedateYear === +dateYear;\n};\nexport const getPreviousMonth = (month, year) => {\n  const prevMonth = month > 1 ? month - 1 : 12;\n  const prevMonthYear = month > 1 ? year : year - 1;\n  return {\n    month: prevMonth,\n    year: prevMonthYear\n  };\n};\nexport const getNextMonth = (month, year) => {\n  const nextMonth = month < 12 ? month + 1 : 1;\n  const nextMonthYear = month < 12 ? year : year + 1;\n  return {\n    month: nextMonth,\n    year: nextMonthYear\n  };\n};\n\nconst cal = (month = THIS_MONTH, year = THIS_YEAR) => {\n  const monthDays = getMonthDays(month, year);\n  const monthFirstDay = getMonthFirstDay(month, year);\n  const daysFromPrevMonth = monthFirstDay - 1;\n  const daysFromNextMonth = CALENDAR_WEEKS * 7 - (daysFromPrevMonth + monthDays);\n  const {\n    month: prevMonth,\n    year: prevMonthYear\n  } = getPreviousMonth(month, year);\n  const {\n    month: nextMonth,\n    year: nextMonthYear\n  } = getNextMonth(month, year);\n  const prevMonthDays = getMonthDays(prevMonth, prevMonthYear);\n  const prevMonthDates = [...new Array(daysFromPrevMonth)].map((n, index) => {\n    const day = index + 1 + (prevMonthDays - daysFromPrevMonth);\n    return [prevMonthYear, zeroPad(prevMonth, 2), zeroPad(day, 2)];\n  });\n  const thisMonthDates = [...new Array(monthDays)].map((n, index) => {\n    const day = index + 1;\n    return [year, zeroPad(month, 2), zeroPad(day, 2)];\n  });\n  const nextMonthDates = [...new Array(daysFromNextMonth)].map((n, index) => {\n    const day = index + 1;\n    return [nextMonthYear, zeroPad(nextMonth, 2), zeroPad(day, 2)];\n  });\n  return [...prevMonthDates, ...thisMonthDates, ...nextMonthDates];\n};\n\nexport default cal;","map":{"version":3,"sources":["/Users/chase/Desktop/CryptoProjects/CryptoCount-v2/frontend/src/helpers/calendar.js"],"names":["THIS_YEAR","Date","getFullYear","THIS_MONTH","getMonth","WEEK_DAYS","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","CALENDAR_MONTHS","January","February","March","April","May","June","July","August","September","October","November","December","CALENDAR_WEEKS","zeroPad","value","length","padStart","isDate","date","Object","prototype","toString","call","isValidDate","Number","isNaN","valueOf","getDateISO","getDate","join","getMonthDays","month","year","months30","leapYear","includes","getMonthFirstDay","getDay","isSameMonth","basedate","basedateMonth","basedateYear","dateMonth","dateYear","isSameDay","basedateDate","dateDate","getPreviousMonth","prevMonth","prevMonthYear","getNextMonth","nextMonth","nextMonthYear","cal","monthDays","monthFirstDay","daysFromPrevMonth","daysFromNextMonth","prevMonthDays","prevMonthDates","Array","map","n","index","day","thisMonthDates","nextMonthDates"],"mappings":"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","sourcesContent":["export const THIS_YEAR = +new Date().getFullYear();\nexport const THIS_MONTH = +new Date().getMonth() + 1;\n\nexport const WEEK_DAYS = {\n\tSunday: \"Sun\",\n\tMonday: \"Mon\",\n\tTuesday: \"Tue\",\n\tWednesday: \"Wed\",\n\tThursday: \"Thu\",\n\tFriday: \"Fri\",\n\tSaturday: \"Sat\",\n};\n\nexport const CALENDAR_MONTHS = {\n\tJanuary: \"Jan\",\n\tFebruary: \"Feb\",\n\tMarch: \"Mar\",\n\tApril: \"Apr\",\n\tMay: \"May\",\n\tJune: \"Jun\",\n\tJuly: \"Jul\",\n\tAugust: \"Aug\",\n\tSeptember: \"Sep\",\n\tOctober: \"Oct\",\n\tNovember: \"Nov\",\n\tDecember: \"Dec\",\n};\n\nexport const CALENDAR_WEEKS = 6;\n\nexport const zeroPad = (value, length) => `${value}`.padStart(length, \"0\");\n\nexport const isDate = (date) => {\n\tconst isDate = Object.prototype.toString.call(date) === \"[object Date]\";\n\tconst isValidDate = date && !Number.isNaN(date.valueOf());\n\treturn isDate && isValidDate;\n};\n\nexport const getDateISO = (date = new Date()) => {\n\tif (!isDate(date)) return null;\n\n\treturn [\n\t\tdate.getFullYear(),\n\t\tzeroPad(+date.getMonth() + 1, 2),\n\t\tzeroPad(+date.getDate(), 2),\n\t].join(\"-\");\n};\n\nexport const getMonthDays = (month = THIS_MONTH, year = THIS_YEAR) => {\n\tconst months30 = [4, 6, 9, 11];\n\tconst leapYear = year % 4 === 0;\n\n\treturn month === 2\n\t\t? leapYear\n\t\t\t? 29\n\t\t\t: 28\n\t\t: months30.includes(month)\n\t\t? 30\n\t\t: 31;\n};\n\nexport const getMonthFirstDay = (month = THIS_MONTH, year = THIS_YEAR) => {\n\treturn +new Date(`${year}-${zeroPad(month, 2)}-01`).getDay() + 1;\n};\n\nexport const isSameMonth = (date, basedate = new Date()) => {\n\tif (!(isDate(date) && isDate(basedate))) return false;\n\n\tconst basedateMonth = +basedate.getMonth() + 1;\n\tconst basedateYear = basedate.getFullYear();\n\n\tconst dateMonth = +date.getMonth() + 1;\n\tconst dateYear = date.getFullYear();\n\n\treturn +basedateMonth === +dateMonth && +basedateYear === +dateYear;\n};\n\nexport const isSameDay = (date, basedate = new Date()) => {\n\tif (!(isDate(date) && isDate(basedate))) return false;\n\n\tconst basedateDate = basedate.getDate();\n\tconst basedateMonth = +basedate.getMonth() + 1;\n\tconst basedateYear = basedate.getFullYear();\n\n\tconst dateDate = date.getDate();\n\tconst dateMonth = +date.getMonth() + 1;\n\tconst dateYear = date.getFullYear();\n\n\treturn (\n\t\t+basedateDate === +dateDate &&\n\t\t+basedateMonth === +dateMonth &&\n\t\t+basedateYear === +dateYear\n\t);\n};\n\nexport const getPreviousMonth = (month, year) => {\n\tconst prevMonth = month > 1 ? month - 1 : 12;\n\tconst prevMonthYear = month > 1 ? year : year - 1;\n\n\treturn { month: prevMonth, year: prevMonthYear };\n};\n\nexport const getNextMonth = (month, year) => {\n\tconst nextMonth = month < 12 ? month + 1 : 1;\n\tconst nextMonthYear = month < 12 ? year : year + 1;\n\n\treturn { month: nextMonth, year: nextMonthYear };\n};\n\nconst cal = (month = THIS_MONTH, year = THIS_YEAR) => {\n\tconst monthDays = getMonthDays(month, year);\n\tconst monthFirstDay = getMonthFirstDay(month, year);\n\n\tconst daysFromPrevMonth = monthFirstDay - 1;\n\tconst daysFromNextMonth =\n\t\tCALENDAR_WEEKS * 7 - (daysFromPrevMonth + monthDays);\n\n\tconst { month: prevMonth, year: prevMonthYear } = getPreviousMonth(\n\t\tmonth,\n\t\tyear\n\t);\n\tconst { month: nextMonth, year: nextMonthYear } = getNextMonth(month, year);\n\n\tconst prevMonthDays = getMonthDays(prevMonth, prevMonthYear);\n\n\tconst prevMonthDates = [...new Array(daysFromPrevMonth)].map((n, index) => {\n\t\tconst day = index + 1 + (prevMonthDays - daysFromPrevMonth);\n\t\treturn [prevMonthYear, zeroPad(prevMonth, 2), zeroPad(day, 2)];\n\t});\n\n\tconst thisMonthDates = [...new Array(monthDays)].map((n, index) => {\n\t\tconst day = index + 1;\n\t\treturn [year, zeroPad(month, 2), zeroPad(day, 2)];\n\t});\n\n\tconst nextMonthDates = [...new Array(daysFromNextMonth)].map((n, index) => {\n\t\tconst day = index + 1;\n\t\treturn [nextMonthYear, zeroPad(nextMonth, 2), zeroPad(day, 2)];\n\t});\n\n\treturn [...prevMonthDates, ...thisMonthDates, ...nextMonthDates];\n};\n\nexport default cal;\n"]},"metadata":{},"sourceType":"module"}