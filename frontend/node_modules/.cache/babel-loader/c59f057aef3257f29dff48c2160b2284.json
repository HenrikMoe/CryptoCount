{"ast":null,"code":"var _jsxFileName = \"/Users/chase/Desktop/CryptoProjects/CryptoCount-v2/frontend/src/components/ConfDialog/ErrDialog.jsx\";\nimport React from \"react\";\nimport { Modal, Button, ListGroupItem, ListGroup } from \"react-bootstrap\";\nimport { errorTranslate } from \"../../api.js\";\n/**\n * Properties expected:\n * show: boolean\n * body: string\n * buttons: Array<string>\n * onClose: function to call upon close\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Err = function (props) {\n  return /*#__PURE__*/_jsxDEV(ListGroupItem, {\n    children: props.info\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Err;\n\nconst props = props => {\n  var errItems = [];\n  var keyNum = 0;\n  Object.keys(props.body).length !== 0 && props.body.forEach(err => {\n    errItems.push( /*#__PURE__*/_jsxDEV(Err, {\n      info: errorTranslate(err && err.tag) + \" \" + (err.params && err.params[0] || \"\")\n    }, keyNum++, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this));\n  });\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: Boolean(props.show),\n    onHide: () => props.onClose(\"Dismissed\"),\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: errItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: props.buttons.map((btn, i) => /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          props.onClose(btn);\n        },\n        children: btn\n      }, btn, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n};\n\nexport default props;\n\nvar _c;\n\n$RefreshReg$(_c, \"Err\");","map":{"version":3,"sources":["/Users/chase/Desktop/CryptoProjects/CryptoCount-v2/frontend/src/components/ConfDialog/ErrDialog.jsx"],"names":["React","Modal","Button","ListGroupItem","ListGroup","errorTranslate","Err","props","info","errItems","keyNum","Object","keys","body","length","forEach","err","push","tag","params","Boolean","show","onClose","title","buttons","map","btn","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,aAAxB,EAAuCC,SAAvC,QAAwD,iBAAxD;AACA,SAASC,cAAT,QAA+B,cAA/B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,GAAG,GAAG,UAAUC,KAAV,EAAiB;AAC5B,sBAAO,QAAC,aAAD;AAAA,cAAgBA,KAAK,CAACC;AAAtB;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CAFD;;KAAMF,G;;AAIN,MAAMC,KAAK,GAAIA,KAAD,IAAW;AACxB,MAAIE,QAAQ,GAAG,EAAf;AACA,MAAIC,MAAM,GAAG,CAAb;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYL,KAAK,CAACM,IAAlB,EAAwBC,MAAxB,KAAmC,CAAnC,IACCP,KAAK,CAACM,IAAN,CAAWE,OAAX,CAAoBC,GAAD,IAAS;AAC3BP,IAAAA,QAAQ,CAACQ,IAAT,eACC,QAAC,GAAD;AAEC,MAAA,IAAI,EACHZ,cAAc,CAACW,GAAG,IAAIA,GAAG,CAACE,GAAZ,CAAd,GACA,GADA,IAEEF,GAAG,CAACG,MAAJ,IAAcH,GAAG,CAACG,MAAJ,CAAW,CAAX,CAAf,IAAiC,EAFlC;AAHF,OACMT,MAAM,EADZ;AAAA;AAAA;AAAA;AAAA,YADD;AAUA,GAXD,CADD;AAaA,sBACC,QAAC,KAAD;AACC,IAAA,IAAI,EAAEU,OAAO,CAACb,KAAK,CAACc,IAAP,CADd;AAEC,IAAA,MAAM,EAAE,MAAMd,KAAK,CAACe,OAAN,CAAc,WAAd,CAFf;AAAA,4BAIC,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA,6BACC,QAAC,KAAD,CAAO,KAAP;AAAA,kBAAcf,KAAK,CAACgB;AAApB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAJD,eAOC,QAAC,KAAD,CAAO,IAAP;AAAA,6BACC,QAAC,SAAD;AAAA,kBAAYd;AAAZ;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAPD,eAUC,QAAC,KAAD,CAAO,MAAP;AAAA,gBACEF,KAAK,CAACiB,OAAN,CAAcC,GAAd,CAAkB,CAACC,GAAD,EAAMC,CAAN,kBAClB,QAAC,MAAD;AAEC,QAAA,OAAO,EAAE,MAAM;AACdpB,UAAAA,KAAK,CAACe,OAAN,CAAcI,GAAd;AACA,SAJF;AAAA,kBAMEA;AANF,SACMA,GADN;AAAA;AAAA;AAAA;AAAA,cADA;AADF;AAAA;AAAA;AAAA;AAAA,YAVD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAyBA,CAzCD;;AA2CA,eAAenB,KAAf","sourcesContent":["import React from \"react\";\nimport { Modal, Button, ListGroupItem, ListGroup } from \"react-bootstrap\";\nimport { errorTranslate } from \"../../api.js\";\n\n/**\n * Properties expected:\n * show: boolean\n * body: string\n * buttons: Array<string>\n * onClose: function to call upon close\n */\n\nconst Err = function (props) {\n\treturn <ListGroupItem>{props.info}</ListGroupItem>;\n};\n\nconst props = (props) => {\n\tvar errItems = [];\n\tvar keyNum = 0;\n\tObject.keys(props.body).length !== 0 &&\n\t\tprops.body.forEach((err) => {\n\t\t\terrItems.push(\n\t\t\t\t<Err\n\t\t\t\t\tkey={keyNum++}\n\t\t\t\t\tinfo={\n\t\t\t\t\t\terrorTranslate(err && err.tag) +\n\t\t\t\t\t\t\" \" +\n\t\t\t\t\t\t((err.params && err.params[0]) || \"\")\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\treturn (\n\t\t<Modal\n\t\t\tshow={Boolean(props.show)}\n\t\t\tonHide={() => props.onClose(\"Dismissed\")}\n\t\t>\n\t\t\t<Modal.Header closeButton>\n\t\t\t\t<Modal.Title>{props.title}</Modal.Title>\n\t\t\t</Modal.Header>\n\t\t\t<Modal.Body>\n\t\t\t\t<ListGroup>{errItems}</ListGroup>\n\t\t\t</Modal.Body>\n\t\t\t<Modal.Footer>\n\t\t\t\t{props.buttons.map((btn, i) => (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tkey={btn}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tprops.onClose(btn);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{btn}\n\t\t\t\t\t</Button>\n\t\t\t\t))}\n\t\t\t</Modal.Footer>\n\t\t</Modal>\n\t);\n};\n\nexport default props;\n"]},"metadata":{},"sourceType":"module"}